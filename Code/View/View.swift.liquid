//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

protocol {{ prefix }}{{ module_info.name }}ViewProtocol: AnyObject {
    func didSelect{{ prefix }}{{ module_info.name }}Cell(cell: {{ prefix }}{{ module_info.name }}CollectionViewCell)
    func didDeselect{{ prefix }}{{ module_info.name }}Cell(cell: {{ prefix }}{{ module_info.name }}CollectionViewCell)
}

class {{ prefix }}{{ module_info.name }}View: UIView {
    
    //MARK: - IBProperties
    
    @IBOutlet var contentView: UIView! {
        didSet {
            
        }
    }
    @IBOutlet var collectionView: {{ prefix }}{{ module_info.name }}CollectionView! {
        didSet {
            self.collectionView.register(UINib(nibName: "{{ prefix }}{{ module_info.name }}CollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "{{ prefix }}{{ module_info.name }}CollectionViewCellIdentifier")
            self.collectionView.collectionViewProtocol = self
        }
    }
    
    //MARK: - Properties
    
    var viewProtocol: {{ prefix }}{{ module_info.name }}ViewProtocol?
    
    //MARK: - Initializers
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.commonInit()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.commonInit()
    }
    
    //MARK: - Life Cycle
    
    override class func awakeFromNib() {
        super.awakeFromNib()
    }
    
    override func layoutSubviews() {
        super.layoutSubviews()
    }
    
    //MARK: - Functions
    
    fileprivate func commonInit() {
        Bundle.main.loadNibNamed("{{ prefix }}{{ module_info.name }}View", owner: self, options: nil)
        self.addSubview(contentView)
        self.contentView.frame = self.bounds
        self.contentView.autoresizingMask = [.flexibleHeight, .flexibleWidth]
    }
    
}
